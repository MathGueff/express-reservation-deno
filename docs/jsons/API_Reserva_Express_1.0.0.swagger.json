{
  "openapi": "3.0.0",
  "tags": [],
  "info": {
    "title": "API Reserva Express",
    "version": "1.0.0",
    "contact": {},
    "description": ""
  },
  "paths": {
    "/api/user": {
      "get": {
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "summary": "Busca todos os usuários com paginação",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false,
            "description": "Número da página (default = 1)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "required": false,
            "description": "Quantidade de usuários por página (default = 10)"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros inválidos"
          }
        }
      },
      "post": {
        "summary": "Cria um novo usuário",
        "tags": [
          "User"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "balance": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "Busca usuário por ID",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      }
    },
    "/api/user/{id}": {
      "put": {
        "summary": "Atualiza usuário por ID",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Remove usuário por ID",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário removido"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "summary": "Retorna informações do usuário autenticado",
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "TokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário autenticado retornado com sucesso"
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      }
    },
    "/api/auth": {
      "post": {
        "summary": "Realiza login e retorna o token JWT",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "usuario@email.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": 123456
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login bem-sucedido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Token JWT para autenticação"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Credenciais inválidas"
          }
        }
      }
    },
    "/api/reservation": {
      "get": {
        "security": [
          {
            "jwtAuth": []
          }
        ],
        "summary": "Busca todas as reservas com paginação",
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false,
            "description": "Número da página (default = 1)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "required": false,
            "description": "Quantidade de reservas por página (default = 10)"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de reservas retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Parâmetros inválidos"
          }
        }
      },
      "post": {
        "summary": "Cria uma nova reserva",
        "tags": [
          "Reservation"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "daysOfDuration": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reserva criada"
          }
        }
      }
    },
    "/api/reservation/my": {
      "get": {
        "summary": "Busca reservas do usuário",
        "tags": [
          "Reservation"
        ],
        "responses": {
          "200": {
            "description": "reservas encontradas"
          },
          "404": {
            "description": "reserva não encontrada"
          }
        }
      }
    },
    "/api/reservation/{id}": {
      "get": {
        "summary": "Busca reserva por ID",
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "reserva encontrada"
          },
          "404": {
            "description": "reserva não encontrada"
          }
        }
      },
      "delete": {
        "summary": "Remove reserva por ID",
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Reserva removida"
          },
          "404": {
            "description": "Reserva não encontrada"
          }
        }
      }
    },
    "/api/reservation/reserve/{id}": {
      "put": {
        "summary": "Faz a reserva para um usuário",
        "tags": [
          "Reservation"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Reserva realizada"
          },
          "400": {
            "description": "Reserva já existente"
          },
          "404": {
            "description": "Reserva não encontrada"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "jwtAuth": {
        "type": "apikey",
        "in": "header",
        "name": "Authorization"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}